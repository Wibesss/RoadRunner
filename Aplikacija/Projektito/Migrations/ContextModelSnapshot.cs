// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Projektito.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Dispecer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Dispecer");
                });

            modelBuilder.Entity("Models.DodeljenaTuraa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("GenerisanaCena")
                        .HasColumnType("float");

                    b.Property<int?>("TuraID")
                        .HasColumnType("int");

                    b.Property<int?>("VozacID")
                        .HasColumnType("int");

                    b.Property<int?>("VoziloID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TuraID");

                    b.HasIndex("VozacID");

                    b.HasIndex("VoziloID");

                    b.ToTable("DodeljeneTure");
                });

            modelBuilder.Entity("Models.Favorizacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("KompanijaID")
                        .HasColumnType("int");

                    b.Property<int?>("VozacID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KompanijaID");

                    b.HasIndex("VozacID");

                    b.ToTable("Favorizacija");
                });

            modelBuilder.Entity("Models.Kompanija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Vlasnik")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Kompanija");
                });

            modelBuilder.Entity("Models.Ocena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Broj")
                        .HasColumnType("int");

                    b.Property<int?>("KompanijaID")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("VozacID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KompanijaID");

                    b.HasIndex("VozacID");

                    b.ToTable("Ocena");
                });

            modelBuilder.Entity("Models.PonudjenaTura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DispecerID")
                        .HasColumnType("int");

                    b.Property<int?>("TuraID")
                        .HasColumnType("int");

                    b.Property<int?>("VozacID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DispecerID");

                    b.HasIndex("TuraID");

                    b.HasIndex("VozacID");

                    b.ToTable("PonudjenaTura");
                });

            modelBuilder.Entity("Models.PrihvacenaTura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("GenerisanaCena")
                        .HasColumnType("float");

                    b.Property<int?>("TuraID")
                        .HasColumnType("int");

                    b.Property<int?>("VozacID")
                        .HasColumnType("int");

                    b.Property<int?>("VoziloID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TuraID");

                    b.HasIndex("VozacID");

                    b.HasIndex("VoziloID");

                    b.ToTable("PrihvacenaTura");
                });

            modelBuilder.Entity("Models.Prikolica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Duzina")
                        .HasColumnType("float");

                    b.Property<double>("Nosivost")
                        .HasColumnType("float");

                    b.Property<double>("Sirina")
                        .HasColumnType("float");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tablice")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Visina")
                        .HasColumnType("float");

                    b.Property<int?>("VozacID")
                        .HasColumnType("int");

                    b.Property<double>("Zapremina")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("VozacID");

                    b.ToTable("Prikolica");
                });

            modelBuilder.Entity("Models.Tura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<double>("DuzinaRobe")
                        .HasColumnType("float");

                    b.Property<int?>("KompanijaID")
                        .HasColumnType("int");

                    b.Property<double>("OdredisnaGeografskaDuzina")
                        .HasColumnType("float");

                    b.Property<double>("OdredisnaGeografskaSirina")
                        .HasColumnType("float");

                    b.Property<double>("PocetnaGeografskaDuzina")
                        .HasColumnType("float");

                    b.Property<double>("PoctnaGeografskaSirina")
                        .HasColumnType("float");

                    b.Property<DateTime>("PredvidjeniKraj")
                        .HasColumnType("datetime2");

                    b.Property<double>("SirinaRobe")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("TezinaRobe")
                        .HasColumnType("float");

                    b.Property<string>("TipRobe")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("VisinaRobe")
                        .HasColumnType("float");

                    b.Property<double>("Zapremina")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("KompanijaID");

                    b.ToTable("Tura");
                });

            modelBuilder.Entity("Models.Vozac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Vozac");
                });

            modelBuilder.Entity("Models.Vozilo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CenaPoKilometru")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tablice")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("VozacID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VozacID");

                    b.ToTable("Vozilo");
                });

            modelBuilder.Entity("Models.DodeljenaTuraa", b =>
                {
                    b.HasOne("Models.Tura", "Tura")
                        .WithMany()
                        .HasForeignKey("TuraID");

                    b.HasOne("Models.Vozac", "Vozac")
                        .WithMany("DodeljeneTure")
                        .HasForeignKey("VozacID");

                    b.HasOne("Models.Vozilo", "Vozilo")
                        .WithMany("DodeljeneTure")
                        .HasForeignKey("VoziloID");

                    b.Navigation("Tura");

                    b.Navigation("Vozac");

                    b.Navigation("Vozilo");
                });

            modelBuilder.Entity("Models.Favorizacija", b =>
                {
                    b.HasOne("Models.Kompanija", "Kompanija")
                        .WithMany("Favorizacije")
                        .HasForeignKey("KompanijaID");

                    b.HasOne("Models.Vozac", "Vozac")
                        .WithMany("Favorizacije")
                        .HasForeignKey("VozacID");

                    b.Navigation("Kompanija");

                    b.Navigation("Vozac");
                });

            modelBuilder.Entity("Models.Ocena", b =>
                {
                    b.HasOne("Models.Kompanija", null)
                        .WithMany("Ocene")
                        .HasForeignKey("KompanijaID");

                    b.HasOne("Models.Vozac", null)
                        .WithMany("Ocene")
                        .HasForeignKey("VozacID");
                });

            modelBuilder.Entity("Models.PonudjenaTura", b =>
                {
                    b.HasOne("Models.Dispecer", "Dispecer")
                        .WithMany("PonudjeneTure")
                        .HasForeignKey("DispecerID");

                    b.HasOne("Models.Tura", "Tura")
                        .WithMany()
                        .HasForeignKey("TuraID");

                    b.HasOne("Models.Vozac", "Vozac")
                        .WithMany("PonudjeneTure")
                        .HasForeignKey("VozacID");

                    b.Navigation("Dispecer");

                    b.Navigation("Tura");

                    b.Navigation("Vozac");
                });

            modelBuilder.Entity("Models.PrihvacenaTura", b =>
                {
                    b.HasOne("Models.Tura", "Tura")
                        .WithMany()
                        .HasForeignKey("TuraID");

                    b.HasOne("Models.Vozac", "Vozac")
                        .WithMany("PrihvaceneTure")
                        .HasForeignKey("VozacID");

                    b.HasOne("Models.Vozilo", "Vozilo")
                        .WithMany("PrihvaceneTure")
                        .HasForeignKey("VoziloID");

                    b.Navigation("Tura");

                    b.Navigation("Vozac");

                    b.Navigation("Vozilo");
                });

            modelBuilder.Entity("Models.Prikolica", b =>
                {
                    b.HasOne("Models.Vozac", null)
                        .WithMany("Prikolice")
                        .HasForeignKey("VozacID");
                });

            modelBuilder.Entity("Models.Tura", b =>
                {
                    b.HasOne("Models.Kompanija", "Kompanija")
                        .WithMany("Ture")
                        .HasForeignKey("KompanijaID");

                    b.Navigation("Kompanija");
                });

            modelBuilder.Entity("Models.Vozilo", b =>
                {
                    b.HasOne("Models.Vozac", "Vozac")
                        .WithMany("Vozila")
                        .HasForeignKey("VozacID");

                    b.Navigation("Vozac");
                });

            modelBuilder.Entity("Models.Dispecer", b =>
                {
                    b.Navigation("PonudjeneTure");
                });

            modelBuilder.Entity("Models.Kompanija", b =>
                {
                    b.Navigation("Favorizacije");

                    b.Navigation("Ocene");

                    b.Navigation("Ture");
                });

            modelBuilder.Entity("Models.Vozac", b =>
                {
                    b.Navigation("DodeljeneTure");

                    b.Navigation("Favorizacije");

                    b.Navigation("Ocene");

                    b.Navigation("PonudjeneTure");

                    b.Navigation("PrihvaceneTure");

                    b.Navigation("Prikolice");

                    b.Navigation("Vozila");
                });

            modelBuilder.Entity("Models.Vozilo", b =>
                {
                    b.Navigation("DodeljeneTure");

                    b.Navigation("PrihvaceneTure");
                });
#pragma warning restore 612, 618
        }
    }
}
